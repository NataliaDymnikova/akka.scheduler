// Copyright (c) 2016 Natalia Dymnikova
// Available via the MIT license
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
// documentation files (the "Software"), to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
// TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
// OR OTHER DEALINGS IN THE SOFTWARE.

natalia-dymnikova {
  logging {
    status = warn
    name = natalia-dymnikova
    packages = natalia.dymnikova

    thresholdFilter {level = info}

    appenders {
      rollingFile {
        name = rollingFile
        append = true
        fileName = ./logs/log4j-out.log
        filePattern = "./logs/log4j-out-%d{MM-dd-yyyy}-%i.log.gz"
        patternLayout {
          pattern = "%X{ctx} %d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
        }

        policies {
          sizeBasedTriggeringPolicy: {
            size = 10 MB
          }
        }

        defaultRolloverStrategy: {
          max = 10
        }
      }
    }

    loggers {
      root {
        level = info, appenderRef = [{ref = rollingFile}]
      }
      // TODO get rid of loggers.logger arrays and make all loggers like root one where name (e.g. pattern or package) of the logger is used as a key
      // for instance
      // "org.springframework" {level = warn}
      // "natalia.dymnikova"        {level = info}
      //
      logger = [
        {level = warn, name = org.springframework}
        {level = info, name = natalia.dymnikova}
        {level = warn, name = natalia.dymnikova.cli.js.bridge.StaticResourcesFilter}
        {level = info, name = natalia.dymnikova.agent.impl.process.ProcessWatchDog}
        {level = info, name = natalia.dymnikova.monitoring.publisher.JmxMetricsPublisher}
      ]
    }
  }
}

include file("./local-logging.conf")
