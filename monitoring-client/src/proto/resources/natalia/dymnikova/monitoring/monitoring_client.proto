// Copyright (c) 2016 Natalia Dymnikova
// Available via the MIT license
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
// documentation files (the "Software"), to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
// TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
// OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";
package natalia.dymnikova.monitoring;

message Percentile {
              double            percentile   = 1;
              uint64            value        = 2;
}

message Histogram {
              uint64            count        = 1;
              uint64            min          = 2;
              uint64            max          = 3;
     repeated Percentile        percentile   = 4;
}

message Unit {
             string             name         = 1;
             uint32             id           = 2;
}

message Metric {
             string             name         = 1;
             uint32             id           = 2;
             Unit               unit         = 3;

    oneof value {
             Histogram          histogram    = 4;
             uint64             counter      = 5;
    }
}

message Tag {
             string             name         = 1;
             uint32             nameId       = 2;
             string             value        = 3;
             uint32             valueId      = 4;
}

message Tags {
    repeated Tag                tags         = 1;
    repeated Metric             metric       = 2;
}

message Entity {
             string             name         = 1;
             uint32             id           = 2;
    repeated Tags               tags         = 3;
}

message Category {
             string             name         = 1;
             uint32             id           = 2;
    repeated Entity             entity       = 3;
}

message Snapshot {
             uint64             timeStamp    = 1;
    repeated Category           category     = 2;
}

message GetAvailableMetrics {
             uint64             from         = 1;
}

// TODO send names only once per Category/Entity/Metric, omit names for any subsequent snapshot
// TODO use same ids for same names

message GetSnapshot {
             uint64            from          = 1;
    repeated Category          category      = 2;
             uint64            repetitions   = 3;
}





